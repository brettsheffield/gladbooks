# gladd.conf
#
# This is the main gladd.conf file for Gladbooks.  Local site configuration
# should be done in gladd.conf.local
# 
# this file is part of GLADBOOKS
# 
# Copyright (c) 2012, 2013 Brett Sheffield <brett@gladserv.com>
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program (see the file COPYING in the distribution).
# If not, see <http://www.gnu.org/licenses/>.

include		/etc/gladd.conf.local
encoding	UTF-8
session_timeout	6000
url_default	/html/index.html
x-forward	1
xmlpath         /usr/local/gladd/gladbooks-ui/xml/

###############################################################################
# urls (tried in order of appearance)
###############################################################################
url     static  GET  /css/*	 /usr/local/gladd/gladbooks-ui/css/
url     static  GET  /js/*	 /usr/local/gladd/gladbooks-ui/js/
url     static  GET  /html/*	 /usr/local/gladd/gladbooks-ui/html/
url     static  GET  /img/*	 /usr/local/gladd/gladbooks-ui/img/
url     static  GET  /mov/*	 /usr/local/gladd/gladbooks-ui/mov/
url     static  GET  /testdata/* /usr/local/gladd/gladbooks-ui/xml/testdata/
url     xslt	GET  /testxslt/  gb testxslt
url     static  GET  /pdf/* 	 /var/spool/gladbooks/
url     static  GET  /help/* 	 /usr/local/gladd/gladbooks-ui/html/help/

url	sqlview GET  /*/*/search/contacts/*		gb contactsearch
url	sqlview GET  /*/*/accounts/   			gb accountlist
url	sqlview GET  /*/*/accounts/*   			gb accounts
url	sqlview GET  /*/*/accounts.asset/* 		gb accounts.asset
url	sqlview GET  /*/*/accounts.unreconciled/* 	gb accounts.unreconciled
url	sqlview GET  /*/*/accounts.revenue/* 		gb accounts.revenue
url	sqlview GET  /*/*/accounttypes/  		gb accounttype
url     sqlview GET  /auth/				gb auth
url     sqlview GET  /test/auth/			gb auth
url	xslt	GET  /*/*/bank.statement/*/*/*/*/*/*/	gb bank
url	xslt	GET  /*/*/bank.unreconciled/*/*/*/*/	gb bank.unreconciled
url	sqlview GET  /*/*/businesses/* 			gb businesses
url	sqlview GET  /*/*/contacts/ 			gb contactlist
url	sqlview GET  /*/*/contacts/* 			gb contactdetail
url	sqlview GET  /*/*/contactssorted/ 		gb contactssorted
url	sqlview GET  /*/*/creditors/*                   gb creditors
url	sqlview GET  /*/*/cycles/* 			gb cycle
url	sqlview GET  /*/*/debtors/*                     gb debtors
url	sqlview GET  /*/*/departments/*			gb department
url	sqlview GET  /*/*/divisions/*			gb division
url	sqlview GET  /*/*/instances/* 			gb instances
url	sqlview GET  /*/*/journals/*			gb journal
url	xslt	GET  /*/*/ledger.unreconciled/*/*/ 	gb ledger.unreconciled
url	xslt	GET  /*/*/ledger.suggestions/*/ 	gb ledger.suggestions
url	sqlview GET  /*/*/ledgers/*			gb ledger
url	sqlview GET  /*/*/organisations/* 		gb organisationlist
url	sqlview GET  /*/*/organisation_contacts/*/ 	gb org_contact
url	sqlview GET  /*/*/paymenttype/*	 		gb paymenttype
url	sqlview GET  /*/*/products/*	 		gb product
url	sqlview GET  /*/*/productcombo/	 		gb productcombo
url	sqlview GET  /*/*/product_taxes/*		gb product_taxes
url	sqlview GET  /*/*/purchaseorders/*	 	gb purchaseorderview
url	sqlview GET  /*/*/purchaseorderitems/*/ 	gb purchaseorderitem
url	sqlview GET  /*/*/relationships/* 		gb relationships
url	xslt	GET  /*/*/reports/balancesheet/ 	gb balancesheet
url	xslt	GET  /*/*/reports/profitandloss/ 	gb profitandloss
url	sqlview	GET  /*/*/reports/accountsreceivable/ 	gb receivables
url	xslt	GET  /*/*/reports/accountsreceivable/* 	gb accountsreceivable
url	sqlview GET  /*/*/salesinvoices/* 		gb salesinvoicelist
url	xslt	GET  /*/*/salesinvoice.suggestions/*/ 	gb si.suggestions
url	sqlview GET  /*/*/salesorders/	 		gb salesorderlist
url	sqlview GET  /*/*/salesorders/*	 		gb salesorderview
url	sqlview GET  /*/*/salesorderitems/*/ 		gb salesorderitem
url	sqlview GET  /*/*/salespayments/	 	gb salespaymentlist
url	sqlview GET  /*/*/taxes/*	 		gb tax
url	sqlview GET  /*/*/trialbalance/*	 	gb trialbalance

url	sqlview DELETE /*/*/organisation_contacts/*	gb org_contact_del
url	sqlview DELETE /*/*/product_taxes/*		gb product_tax_del
url	sqlview DELETE /*/*/banks/*			gb bank_del

url	xslpost POST /*/*/accounts/*			gb account
url	xslpost POST /*/*/banks/*			gb bank
url	xslpost POST /*/*/billingrun/*	 		gb billingrun
url	xslpost POST /*/*/businesses/*			gb business
url	xslpost POST /*/*/contacts/*			gb contact
url	xslpost POST /*/*/departments/*			gb department
url	xslpost POST /*/*/divisions/*			gb division
url	xslpost POST /*/*/instances/*			gb instance
url	xslpost POST /*/*/journals/*			gb journal
url	xslpost POST /*/*/organisations/*		gb organisation
url	xslpost POST /*/*/organisation_contacts/*	gb organisation_contact
url	xslpost POST /*/*/payments/*			gb payment
url	xslpost POST /*/*/products/*			gb product
url	xslpost POST /*/*/product_taxes/*		gb product_tax
url	xslpost POST /*/*/purchaseorders/*		gb purchaseorder
url	xslpost POST /*/*/purchaseinvoices/*		gb purchaseinvoice
url	xslpost POST /*/*/purchasepayments/*		gb purchasepayment
url	xslpost POST /*/*/purchasepaymentallocations/*	gb purchasepaymentallocation
url	xslpost POST /*/*/salesorders/*			gb salesorder
url	xslpost POST /*/*/salesinvoices/*		gb salesinvoice
url	xslpost POST /*/*/salespayments/*		gb salespayment
url	xslpost POST /*/*/salespaymentallocations/*	gb salespaymentallocation
url	xslpost POST /*/*/search/			gb search

url	plugin	GET  /*/*/csvtoxml/* /usr/local/bin/csvtoxml --auto /var/spool/gladbooks/$0/$3

url	plugin	POST /test/1/plugintest/* /usr/local/bin/testplugin.sh

url	upload	POST /fileupload/*/			/var/spool/gladbooks/$1/

###############################################################################
# acls (tried in order of appearance)
###############################################################################
acl	GET	*				params	nocache
acl     GET     /css/*                          allow   *
acl     GET     /js/*                           allow   *
acl     GET     /html/*                         allow   *
acl     GET     /help/*                         allow   *
acl     GET     /img/*                          allow   *
acl     GET     /media/*                        allow   *

acl     POST    /fileupload/*                   allow   *
acl     GET     /pdf/*                      	allow   *

# Separate url for qunit tests to prevent cookies interfering
acl     GET     /test/auth/                     sufficient      user
acl     GET     /test/auth/                     sufficient 	ldap
acl     GET     /test/auth/                     deny     	*

# Authentication
acl     GET     /auth/*                         params		nocache
acl     GET     /auth/* 			params		cookie:session
acl     GET     /auth/*                         sufficient	cookie
acl     GET     /auth/*                         sufficient	user
acl     GET     /auth/*                         sufficient 	ldap
acl     GET     /auth/*                         deny     	*

acl	*	*                               optional[success=3]     cookie
acl     *     	*                         	optional[success=2]     user
acl     *      	*                         	require                 ldap

# Authorization
acl     POST    /*/*/search/			params  nocache
acl     POST    /*/*/search/			params  htmlout

acl	GET	/testme/			sufficient 	false
acl	GET	/testme/			sufficient 	user

acl	GET	/users/*			require 	user
acl	GET	/wheel/*			require 	user
acl     GET     /mov/*                          allow   *

acl     GET     /testdata/*                     params  nocache
acl     GET     /testdata/*                     allow   *

acl     GET     /testxslt/*                     allow   *
acl     GET     /md5/*                          allow   *
acl	GET	/report/*			allow   *
acl	GET	/plugintest/			allow   *
acl	POST	/plugintest/			allow   *
acl     GET     /*/*/csvtoxml/*                 allow   *
acl     GET     /*/*/*                     	sufficient	accounts
acl     POST    /*/*/*                     	sufficient      accounts
acl     DELETE  /*/*/organisation_contacts/*    sufficient      *
acl     DELETE  /*/*/product_taxes/*            sufficient      *
acl     DELETE  /*/*/banks/*                    sufficient      *

# backstop
acl	*	*				deny	*

###############################################################################
## auth
auth	false	group	nonexistent	*	*
auth    user    user    *       	*       *
#auth	pam	pam	login		*	*
auth    ldap    ldap    ldap1   	ld_auth uid
#auth	wheel	group	square_$0	*	*
auth	cookie	cookie	*		*	*
auth	accounts group	accounts	*	*

###############################################################################
# sql
# Rather than creating lengthy SQL queries here, create a view in the database
# and SELECT * FROM <view>
#
# variable substitutions:
# $0 = instance
# $1 = business
###############################################################################
begin sql accounts
        SELECT id, accounttype AS type, description
        FROM gladbooks_$0_$1.account
end sql accounts

begin sql accountlist		
        SELECT * FROM (
            SELECT nominalcode as id, nominalcode,
                    lpad('' || nominalcode, 4, '0') || ' - ' || account as name
            FROM gladbooks_$0_$1.accountlist
        ) t
end sql accountlist

begin sql accounts.asset
	SELECT nominalcode as id,
		lpad('' || nominalcode, 4, '0') || ' - ' || account as name 
	FROM gladbooks_$0_$1.assetaccountlist
end sql accounts.asset

begin sql accounts.unreconciled
	SELECT nominalcode as id,
		lpad('' || nominalcode, 4, '0') || ' - ' || account as name 
	FROM gladbooks_$0_$1.assetaccountlist
	WHERE nominalcode IN (
		SELECT DISTINCT account 
		FROM gladbooks_$0_$1.bank_current 
		WHERE ledger IS NULL
	)
end sql accounts.unreconciled

begin sql accounts.revenue
	SELECT nominalcode as id,
		lpad('' || nominalcode, 4, '0') || ' - ' || account as name 
	FROM gladbooks_$0_$1.revenueaccountlist
end sql accounts.revenue

sql accounttype		SELECT lpad('' || id, 4, '0') as id, name, range_min, range_max, next_id FROM gladbooks_$0_$1.accounttype ORDER by id ASC
sql auth		SELECT * FROM gladbooks.username WHERE id='$user'
sql balancesheet	SELECT * FROM gladbooks_$0_$1.balancesheet
sql receivables		SELECT * FROM gladbooks_$0_$1.accountsreceivable
sql accountsreceivable	SELECT * FROM gladbooks_$0_$1.salesstatement
sql trialbalance	SELECT * FROM gladbooks_$0_$1.trialbalance
sql businesses		SELECT * FROM gladbooks_$0.businessview ORDER BY name ASC
sql contactdetail	SELECT * FROM gladbooks_$0.contactdetailview
sql contactlist		SELECT * FROM gladbooks_$0.contactlist
sql contactsearch	SELECT * FROM gladbooks_$0.contactlist WHERE name ILIKE '%$4%'
sql contactssorted	SELECT * FROM gladbooks_$0.contactlist ORDER BY name ASC
sql cycle		SELECT id, cyclename as name FROM gladbooks.cycle
sql department		SELECT id, name FROM gladbooks_$0_$1.department

begin sql bank
	SELECT * FROM (
		SELECT bank as id, transactdate as date, description, 
			account, paymenttype as type, ledger,
			COALESCE(debit, '0.00') as debit,
			COALESCE(credit, '0.00') as credit
		FROM gladbooks_$0_$1.bank_current
		WHERE account = '$3'
		ORDER BY $6 $8, id $8
		LIMIT $4 
		OFFSET $5
	) b ORDER BY b.$6 $7, b.id $7
end sql bank

begin sql bank_del
        SET search_path TO gladbooks_$0_$1,gladbooks_$0,gladbooks;
        BEGIN TRANSACTION;
        INSERT INTO gladbooks_$0_$1.bankdetail(bank, is_deleted) VALUES ('$3', 'true');
        COMMIT TRANSACTION;
	SELECT bank as id, account, transactdate as date, description,
		debit, credit 
	FROM gladbooks_$0_$1.bank_current 
end sql bank_del

begin sql bank.unreconciled
	SELECT bank as id, account, transactdate as date, description,
		debit, credit 
	FROM gladbooks_$0_$1.bank_current 
	WHERE ledger IS NULL
	AND account = '$3'
	ORDER BY transactdate $6, id $6
	LIMIT $4
	OFFSET $5
end sql bank.unreconciled

begin sql ledger.unreconciled
	SELECT j.id, j.transactdate, j.description, l.account, l.division,
		l.department, l.debit, l.credit
	FROM gladbooks_$0_$1.journal j
	INNER JOIN gladbooks_$0_$1.ledger l
	ON j.id = l.journal
	WHERE l.id NOT IN (
		SELECT ledger 
		FROM gladbooks_$0_$1.bank_current
		WHERE ledger IS NOT NULL
	)
	AND l.account = '$3'
	AND j.transactdate = '$4'
end sql ledger.unreconciled

begin sql ledger.suggestions
	SELECT j.id, j.transactdate, j.description, l.account, l.division,
		l.department, l.debit, l.credit
	FROM gladbooks_$0_$1.journal j
	INNER JOIN gladbooks_$0_$1.ledger l
	ON j.id = l.journal
	WHERE l.id NOT IN (
		SELECT ledger 
		FROM gladbooks_$0_$1.bank_current
		WHERE ledger IS NOT NULL
	)
	AND j.transactdate =
	(SELECT transactdate FROM gladbooks_$0_$1.journal WHERE id =
	(SELECT journal FROM gladbooks_$0_$1.ledger WHERE id = '$3')) 
	AND l.account =
	(SELECT account FROM gladbooks_$0_$1.bank_current WHERE bank = '$3') 
	AND (
	l.debit =
	(SELECT debit FROM gladbooks_$0_$1.bank_current WHERE bank = '$3'
	AND debit IS NOT NULL) 
	OR l.credit =
	(SELECT credit FROM gladbooks_$0_$1.bank_current WHERE bank = '$3'
	AND credit IS NOT NULL) 
	)
end sql ledger.suggestions

begin sql org_contact_del
	DELETE FROM gladbooks_$0.organisation_contact 
	WHERE organisation='$3' AND contact='$4';
	SELECT id, name, phone, mobile, email 
	FROM gladbooks_$0.contactdetailview cdv
	WHERE cdv.id IN (
		SELECT contact
		FROM gladbooks_$0.organisation_contact
		WHERE organisation='$3'
	)
end sql org_contact_del

sql division		SELECT id, name FROM gladbooks_$0_$1.division
sql instances		SELECT * FROM gladbooks.instance
sql journal		SELECT * FROM gladbooks_$0_$1.journal
sql ledger		SELECT * FROM gladbooks_$0_$1.generalledger
sql organisationlist	SELECT * FROM gladbooks_$0.organisationlist

# TODO: select only debtors
begin sql debtors
        SELECT * FROM gladbooks_$0.organisationlist
        WHERE id IN (
                SELECT organisation FROM gladbooks_$0_$1.salesinvoice_unpaid
        )
end sql debtors
# TODO: select only creditors
begin sql creditors
        SELECT * FROM gladbooks_$0.organisationlist
end sql creditors

begin sql org_contact	
	SELECT id, name, email, phone, mobile, 
	array_to_string(
		ARRAY(
			SELECT relationship 
			FROM gladbooks_$0.organisation_contact 
			WHERE organisation='$3'
			AND contact=cdv.id
			AND relationship > 0
		), ','
	) as type
	FROM gladbooks_$0.contactdetailview cdv
	WHERE cdv.id IN (
		SELECT contact
		FROM gladbooks_$0.organisation_contact
		WHERE organisation='$3'
	)
end sql org_contact

sql paymenttype		SELECT DISTINCT * FROM gladbooks.paymenttype

begin sql product
	SELECT
		id, account, shortname, description,
		price_buy, price_sell
	FROM gladbooks_$0_$1.productlist
end sql product

begin sql productcombo
	SELECT id, shortname AS name, description AS linetext, 
                price_sell AS price
	FROM gladbooks_$0_$1.productlist
end sql productcombo

begin sql product_taxes

	SELECT tax as id, name
	FROM gladbooks.taxdetail
	WHERE tax IN
	(
		SELECT tax
		FROM gladbooks_$0_$1.product_tax
		WHERE id IN (
			SELECT MAX(id) 
			FROM gladbooks_$0_$1.product_tax 
			GROUP BY product,tax
		)
		AND product='$3'
		AND is_applicable='true'
	) 
		

end sql product_taxes

begin sql product_tax_del
	INSERT INTO gladbooks_$0_$1.product_tax
		(product, tax, is_applicable)
	VALUES
		('$3', '$4', 'false')
end sql product_tax_del

sql profitandloss	SELECT * FROM gladbooks_$0_$1.profitandloss
sql relationships	SELECT * FROM gladbooks_$0.relationship WHERE id > 0
sql salesinvoice	SELECT * FROM gladbooks_$0_$1.salesinvoice_current

begin sql salesinvoicelist
	SELECT 
		ref,
		taxpoint,
		DATE(issued) as issued,
		due,
		gladbooks.format_accounting(subtotal) AS subtotal,
		gladbooks.format_accounting(tax) AS tax,
		gladbooks.format_accounting(total) AS total
	FROM gladbooks_$0_$1.salesinvoice_current
end sql salesinvoicelist

begin sql si.suggestions
	SELECT * FROM gladbooks_$0_$1.salesinvoice_unpaid
        WHERE organisation='$3'
        ORDER BY issued ASC
end sql si.suggestions

sql salesorderlist	SELECT * FROM gladbooks_$0_$1.salesorderlist
sql salesorderview	SELECT * FROM gladbooks_$0_$1.salesorderview
sql purchaseorderview	SELECT * FROM gladbooks_$0_$1.purchaseorderview

begin sql purchaseorderitem
	SELECT * FROM gladbooks_$0_$1.purchaseorderitem_current
        WHERE purchaseorder='$3'
        ORDER BY id;
end sql purchaseorderitem

begin sql salesorderitem
	SELECT * FROM gladbooks_$0_$1.salesorderitem_current
        WHERE salesorder='$3'
        ORDER BY id;
end sql salesorderitem

sql salespaymentlist	SELECT * FROM gladbooks_$0_$1.salespaymentlist

begin sql tax
	SELECT tax as id, name
	FROM gladbooks.taxdetail
	WHERE id IN (SELECT MAX(id) FROM gladbooks.taxdetail GROUP BY tax)
end sql tax

sql test		SELECT * FROM test

sql ld_auth		ou=people
sql ld_group		ou=group
